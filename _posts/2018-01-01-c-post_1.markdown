---
layout: post
date:   2018-01-01 00:00:00 -0800
group: C
title:  Post 1
permalink: /c/post_1/
published: true
comments: false
---

{% highlight c %}
#include "common.h"

//--------------------------------------------------------------------------------------
#define A(v)   ((uint16_t)(uintptr_t)&(v))
#define PA(v)  ((uint16_t)(uintptr_t)(v))

//--------------------------------------------------------------------------------------
typedef struct {
  uint8_t x;
  uint8_t *px;
} c_t;

//--------------------------------------------------------------------------------------
typedef struct {
  c_t c;
  c_t *pc;
} b_t;

//--------------------------------------------------------------------------------------
typedef struct {
  b_t b;
  b_t *pb;
} a_t;

//--------------------------------------------------------------------------------------
void print_a(a_t *a, uint16_t b)
{
  printf("a->b.c.x         |  %3d  |  %d\n", A(a->b.c.x)-b, a->b.c.x);
  printf("*(a->b.c.px)     |  %3d  |  %d\n", PA(a->b.c.px)-b, *(a->b.c.px));
  printf("a->b.pc->x       |  %3d  |  %d\n", A(a->b.pc->x)-b, a->b.pc->x);
  printf("*(a->b.pc->px)   |  %3d  |  %d\n", PA(a->b.pc->px)-b, *(a->b.pc->px));
  printf("a->pb->c.x       |  %3d  |  %d\n", A(a->pb->c.x)-b, a->pb->c.x);
  printf("*(a->pb->c.px)   |  %3d  |  %d\n", PA(a->pb->c.px)-b, *(a->pb->c.px));
  printf("a->pb->pc->x     |  %3d  |  %d\n", A(a->pb->pc->x)-b, a->pb->pc->x);
  printf("*(a->pb->pc->px) |  %3d  |  %d\n", PA(a->pb->pc->px)-b, *(a->pb->pc->px));
}

//--------------------------------------------------------------------------------------
int main(int argc, char *argv[])
{
  printf("name             |  addr |  value\n");
  printf("-----------------------------------------------\n");

  uint8_t dummy = 0xFF;
  uint16_t b = 0xF000 & A(dummy);

  uintptr_t *addr1 = (uintptr_t *)&(uint8_t){0x01};
  uintptr_t *addr2 = (uintptr_t *)&(uint8_t){0x02};

  print_a(&(a_t)
  {
    (b_t)
    {
      (c_t)  { (uint8_t){0x01}, &(uint8_t){0x02} },
      &(c_t) { (uint8_t){0x03}, &(uint8_t){0x04} },     
    },
    &(b_t)  
    {
      (c_t)  { (uint8_t){0x05}, &(uint8_t){0x06} },
      &(c_t) { (uint8_t){0x07}, &(uint8_t){0x08} },
    },
  }, b);

  uintptr_t *addr3 = (uintptr_t *)&(uint8_t){0x03};
  uintptr_t *addr4 = (uintptr_t *)&(uint8_t){0x04};

  printf("-----------------------------------------------\n");
  printf("*addr1           |  %3d  |  %d\n", PA(addr1)-b, (uint8_t)*addr1);
  printf("*addr2           |  %3d  |  %d\n", PA(addr2)-b, (uint8_t)*addr2);
  printf("*addr3           |  %3d  |  %d\n", PA(addr3)-b, (uint8_t)*addr3);
  printf("*addr4           |  %3d  |  %d\n", PA(addr4)-b, (uint8_t)*addr4);

  return 0;
}
{% endhighlight %}

## example run

![c_post_1]({{ "images/c_post_1.png" | absolute_url }}){:class="img-responsive" .center-image}

